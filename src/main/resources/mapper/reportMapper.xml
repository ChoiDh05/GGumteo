<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.ggumteo.mapper.report.WorkReportMapper">
    <select id="selectVideoReports" resultType="WorkReportDTO">
        SELECT
        p.id AS postId,
        p.post_title AS postTitle,
        p.post_type AS postType,
        mp.profile_name AS profileName,
        mp.profile_email AS profileEmail,
        rpt.profile_name AS reportProfileName, -- 신고한 사람의 이름
        rpt.profile_email AS reportProfileEmail, -- 신고한 사람의 이메일
        p.created_date AS postCreatedDate,
        w.genre_type AS genreType,
        w.read_count AS readCount,
        COALESCE(AVG(r.star), 0) AS star, -- 댓글 별점 평균, NULL일 경우 0으로 표시
        w.work_price AS workPrice,
        wr.report_status AS reportStatus,
        wr.created_date AS reportCreatedDate,
        wr.report_contents AS reportContents
        FROM
        tbl_post p
        JOIN
        tbl_member_profile mp ON p.member_profile_id = mp.id
        JOIN
        tbl_work w ON w.id = p.id
        LEFT JOIN
        tbl_reply r ON r.work_id = w.id
        JOIN
        tbl_work_report wr ON wr.work_id = w.id
        JOIN
        tbl_member_profile rpt ON wr.member_profile_id = rpt.id -- 신고한 사람의 프로필 정보
        WHERE
        p.post_type = 'VIDEO'
        <!-- 신고 관리 조건 추가 -->
        <if test="order == 'reportStatus'">
            AND wr.report_status = 'REPORT'
        </if>
        <!-- 통합 검색 조건: 제목, 장르, 작성자 중 하나에 검색어 포함 -->
        <if test="search != null and search != ''">
            AND (
            p.post_title LIKE CONCAT('%', #{search}, '%')
            OR w.genre_type LIKE CONCAT('%', #{search}, '%')
            OR mp.profile_name LIKE CONCAT('%', #{search}, '%')
            )
        </if>
        GROUP BY
        p.id, p.post_title, p.post_type, mp.profile_name, mp.profile_email,
        rpt.profile_name, rpt.profile_email, p.created_date, w.genre_type,
        w.read_count, w.work_price, wr.report_status, wr.created_date, wr.report_contents
        <!-- 정렬 조건 -->
        <if test="order != null and order != ''">
            ORDER BY
            <choose>
                <when test="order == 'postCreatedDate'">p.created_date DESC</when>
                <when test="order == 'readCount'">w.read_count DESC</when>
                <when test="order == 'star'">star DESC</when>
                <!-- 신고관리일 경우 기본 정렬 추가 -->
                <when test="order == 'reportStatus'">p.created_date DESC</when>
            </choose>
        </if>
        <!-- 기본 정렬 조건 추가 -->
        <if test="order == null or order == ''">
            ORDER BY p.created_date DESC
        </if>
        <!-- 페이징 -->
        LIMIT #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <!-- 전체 신고 내역 수 조회 (페이징을 위한 총 개수) -->
    <select id="countVideoReports" resultType="int">
        SELECT
        COUNT(*)
        FROM
        tbl_post p
        JOIN
        tbl_member_profile mp ON p.member_profile_id = mp.id
        JOIN
        tbl_work w ON w.id = p.id
        LEFT JOIN
        tbl_reply r ON r.work_id = w.id
        JOIN
        tbl_work_report wr ON wr.work_id = w.id
        JOIN
        tbl_member_profile rpt ON wr.member_profile_id = rpt.id -- 신고한 사람의 프로필 정보
        WHERE
        p.post_type = 'VIDEO'
        <!-- 신고 관리 조건 추가 -->
        <if test="order == 'reportStatus'">
            AND wr.report_status = 'REPORT'
        </if>
        <!-- 통합 검색 조건 -->
        <if test="search != null and search != ''">
            AND (
            p.post_title LIKE CONCAT('%', #{search}, '%')
            OR w.genre_type LIKE CONCAT('%', #{search}, '%')
            OR mp.profile_name LIKE CONCAT('%', #{search}, '%')
            )
        </if>
    </select>
</mapper>