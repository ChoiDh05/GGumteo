<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.ggumteo.mapper.inquiry.InquiryMapper">
    <!-- 문의사항 삽입 -->
    <insert id="insertInquiry" parameterType="PostDTO">
        insert into tbl_post (post_title, post_content, post_type, member_profile_id)
        values (#{postTitle}, #{postContent}, 'INQUIRY', #{memberProfileId})
    </insert>

    <!-- 마지막 삽입된 ID 가져오기 -->
    <select id="getLastInsertId" resultType="Long">
        select LAST_INSERT_ID()
    </select>

    <!-- tbl_inquiry에 삽입 -->
    <insert id="insertInquiryToTblInquiry" parameterType="PostDTO">
        insert into tbl_inquiry (id, inquiry_status)
        values (#{id}, 'NO')
    </insert>

    <!-- 전체 문의사항 가져오기 -->
    <select id="selectAll" resultType="InquiryDTO">
        select
        p.id as postId,
        p.post_title as postTitle,
        p.post_content as postContent,
        p.created_date as postCreatedDate,
        mp.profile_name as profileName,
        mp.profile_email as profileEmail,
        i.inquiry_status as inquiryStatus,
        a.admin_answer_content as answerContent,
        a.created_date as answerDate
        from tbl_post p
        join tbl_inquiry i on p.id = i.id
        join tbl_member_profile mp on p.member_profile_id = mp.id
        left join tbl_admin_answer a on i.id = a.inquiry_id
        where p.post_type = 'INQUIRY'

        <!-- 검색 조건 (문의 제목 또는 내용에서 검색) -->
        <if test="searchKeyword != null and searchKeyword != ''">
            and (p.post_title like CONCAT('%', #{searchKeyword}, '%')
            or p.post_content like CONCAT('%', #{searchKeyword}, '%'))
        </if>

        <!-- 필터 조건 설정 -->
        <if test="order == 'no-answer-filter'">
            and i.inquiry_status = 'NO'
        </if>
        <if test="order == 'inquiry-created-date'">
            and i.inquiry_status = 'YES'
        </if>

        <!-- 정렬 조건 설정 -->
        <choose>
            <when test="order == 'inquiry-answer-created-date'">
                order by a.created_date desc
            </when>
            <otherwise>
                order by p.created_date desc
            </otherwise>
        </choose>

        limit #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <!-- 총 문의사항 개수 조회 -->
    <select id="countTotal" resultType="int">
        select count(*)
        from tbl_post p
        join tbl_inquiry i on p.id = i.id
        where p.post_type = 'INQUIRY'

        <!-- 필터 조건 추가 -->
        <if test="order == 'no-answer-filter'">
            and i.inquiry_status = 'NO'
        </if>
        <if test="order == 'inquiry-answer-created-date'">
            and i.inquiry_status = 'YES'
        </if>

        <!-- 검색 조건 -->
        <if test="searchKeyword != null and searchKeyword != ''">
            and (p.post_title like CONCAT('%', #{searchKeyword}, '%')
            or p.post_content like CONCAT('%', #{searchKeyword}, '%'))
        </if>
    </select>


    <!-- 문의사항 상태 업데이트 -->
    <update id="updateInquiryStatus" parameterType="map">
        update tbl_inquiry
        set inquiry_status = 'YES'
        where id = #{inquiryId}
    </update>

    <!-- 답변 삽입 후 내용과 생성일 반환 -->
    <insert id="insertAdminAnswer" parameterType="map">
        insert into tbl_admin_answer (admin_answer_content, inquiry_id)
        values (#{answerContent}, #{inquiryId})
    </insert>

    <!-- 답변 내용 및 생성일 조회 -->
    <select id="getAnswerContentAndDate" parameterType="Long" resultType="map">
        select admin_answer_content as answerContent, created_date as answerDate
        from tbl_admin_answer
        where inquiry_id = #{inquiryId}
        order by created_date desc
            limit 1
    </select>

    <!--문의 답변 삭제 -->
    <delete id="deleteFromAdminAnswer" parameterType="list">
        DELETE FROM tbl_admin_answer
        WHERE inquiry_id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--문의테이블 내역 삭제-->
    <delete id="deleteFromInquiry" parameterType="list">
        DELETE FROM tbl_inquiry
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--게시글중에 문의작성 내역 삭제-->
    <delete id="deleteFromPost" parameterType="list">
        DELETE FROM tbl_post
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND post_type = 'INQUIRY';
    </delete>

    <!--  마이페이지  -->
    <!--내 문의 내역 목록 조회-->
    <select id="selectInquiryHistoryByMember">
        select i.id, i.inquiry_status, p.post_title, p.created_date as answerDate, p.post_content,
               m.profile_img_url ,mp.profile_nickname, aa.admin_answer_content as answerContent
        from
            tbl_inquiry i
                join tbl_post p on i.id = p.id
                join tbl_member_profile mp on p.member_profile_id = mp.id
                join tbl_member m on mp.member_id = m.id and m.id = #{memberId}
                join tbl_admin_answer aa on i.id = aa.inquiry_id and p.post_type = 'INQUIRY'
        order by i.id desc;
    </select>
</mapper>




