<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.ggumteo.mapper.audition.AuditionMapper">

    <sql id="search">
        <if test="search.keyword != null and search.keyword != ''">
            and (
            p.post_title like concat('%', #{search.keyword}, '%')
            or p.post_content like concat('%', #{search.keyword}, '%')
            or mp.profile_nickname like concat('%', #{search.keyword}, '%')
            )
        </if>
        <if test="search.genreType != null and search.genreType != ''">
            and w.genre_type = #{search.genreType}
        </if>
        <if test="search.postType != null and search.postType != ''">
            and UPPER(p.post_type) = UPPER(#{search.postType})
        </if>
    </sql>

    <insert id="insert">
        insert into tbl_audition(id, audition_field, audition_career, expected_amount,
                                 service_start_date, audition_deadline, audition_personnel,
                                 audition_location, audition_background, audition_category,
                                 file_content, audition_status)
        values(#{id}, #{auditionField}, #{auditionCareer}, #{expectedAmount}, #{serviceStartDate},
               #{auditionDeadLine}, #{auditionPersonnel}, #{auditionLocation}, #{auditionBackground},
               #{auditionCategory}, #{fileContent}, #{auditionStatus})
    </insert>

    <!-- 조회수 증가 -->
    <update id="increaseReadCount" parameterType="Long">
        update tbl_work
        set read_count = read_count + 1
        where id = #{id}
    </update>

    <!-- 모집 정보 수정 -->
    <update id="updateAudition" parameterType="auditionDTO">
    update tbl_audition
    set
        audition_field = #{auditionField}, audition_career = #{auditionCareer}, expected_amount = #{expectedAmount},
        service_start_date = #{serviceStartDate}, audition_deadline = #{auditionDeadLine}, audition_personnel = #{auditionPersonnel},
        audition_location = #{auditionLocation}, audition_background = #{auditionBackground}, audition_category = #{auditionCategory},
        file_content = #{fileContent}, audition_status = #{auditionStatus}
    where
        id = #{id}
    </update>

    <!-- post테이블 수정 -->
    <update id="updatePost">
        update tbl_post
        set
            post_title = #{postTitle},
            post_content = #{postContent},
            updated_date = current_timestamp
        where id = #{postId}
    </update>

    <!-- 모집 삭제 -->
    <delete id="deleteById" parameterType="Long">
        delete from tbl_audition
        where id = #{id}
    </delete>

    <!-- post 삭제 -->
    <delete id="deletePostById" parameterType="Long">
        delete from tbl_post
        where id = #{id}
    </delete>

    <!-- 작품 목록 조회 및 검색-->
    <select id="selectAll" resultType="auditionDTO" parameterType="map">
        select
        a.id, a.audition_field, a.audition_career, a.expected_amount,
        a.service_start_date, a.audition_deadline, a.audition_personnel,
        a.audition_location, a.audition_background, a.audition_category,
        a.file_content, a.audition_status,
        p.post_title,
        p.post_content,
        p.member_profile_id,
        p.created_date,
        p.updated_date,
        mp.profile_nickname,
        mp.profile_email
        from
        tbl_audition a
        join tbl_post p on a.id = p.id
        join tbl_member_profile mp on p.member_profile_id = mp.id
        where
        p.post_type = #{postType}
        <include refid="search"/>
        group by a.id
        order by a.id desc
        limit #{pagination.startRow}, #{pagination.rowCount}
    </select>


    <!-- 검색 조건이 포함된 총 작품 수 조회 -->
    <select id="selectTotalWithSearch" parameterType="map" resultType="int">
        select count(*)
        from tbl_audition a
        join tbl_post p on a.id = p.id
        join tbl_member_profile mp on p.member_profile_id = mp.id
        where p.post_type = #{postType}
        <include refid="search"/>
    </select>

    <!-- 게시글 id로 게시글 조회 -->
    <select id="selectById" resultType="auditionDTO">
        SELECT
            a.id, a.audition_field,a.audition_career,a.expected_amount,a.service_start_date,a.audition_deadline,a.audition_personnel,
            a.audition_location,a.audition_background,a.audition_category,a.file_content,a.audition_status,
            p.post_title, p.post_content, p.member_profile_id, p.created_date, p.updated_date,
            mp.profile_nickname, mp.profile_email, m.profile_img_url
        FROM
            tbl_audition a
                JOIN
            tbl_post p ON a.id = p.id
                JOIN
            tbl_member_profile mp ON mp.id = p.member_profile_id
                JOIN
            tbl_member m ON m.id = mp.member_id
        WHERE
            a.id = #{id}
    </select>

    <select id="selectFilesByPostId" resultType="postFileDTO">
        select
            f.id as fileId, f.file_name, f.file_path, f.file_size, f.file_type
        from
            tbl_post_file pf
                join tbl_file f on pf.file_id = f.id
        where
            pf.post_id = #{postId}
        order by pf.id
    </select>

    <!-- 마이페이지 -->

    <select id="selectByMemberId">
        select a.id, a.audition_field, a.audition_career, a.expected_amount,
               a.audition_deadline, a.audition_personnel, a.audition_location, a.audition_status,
               p.post_title, p.post_content, p.created_date, mp.profile_name, mp.profile_email, m.id
        from tbl_audition a
                 join tbl_post p on a.id = p.id and p.post_type = #{postType}
                 join tbl_member_profile mp on p.member_profile_id = mp.id
                 join tbl_member m on mp.member_id = m.id and m.id = #{memberId}
        order by a.id desc
            limit #{myAuditionPagination.startRow}, #{myAuditionPagination.rowCount}
    </select>

    <!-- 내 작품 게시글 전체 갯수  -->
    <select id="selectCount">
        select count(*) from tbl_audition a
            join tbl_post p on a.id = p.id and p.post_type = #{postType}
            join tbl_member_profile mp on p.member_profile_id = mp.id
            join tbl_member m on mp.member_id = m.id and m.id = #{memberId}
    </select>

    <!--  내 작품 정보 조회  -->
    <select id="selectByIdAndPostType" resultType="auditionDTO">
        select a.id, a.audition_status, p.post_type
        from tbl_audition a join tbl_post p
        on a.id = p.id and a.id = #{auditionId} and p.post_type = #{postType}
    </select>

</mapper>